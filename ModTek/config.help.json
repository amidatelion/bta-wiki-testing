{
    "_Description": "When changing any of the listed settings, copy the relevant parts into `BATTLETECH/Mods/ModTek/config.json`.",
    "SearchModsInSubDirectories_Description": "Searches recursively all directories for mod.json instead only for directories directly found under Mods. Set to false for pre v2.0 behavior.",
    "SearchModsInSubDirectories": true,
    "ImplicitManifestShouldMergeJSON_Description": "How JSONs in a mods implicit manifest (StreamingAssets) are being treated.",
    "ImplicitManifestShouldMergeJSON": true,
    "ImplicitManifestShouldAppendText_Description": "How CSVs in a mods implicit manifest (StreamingAssets) are being treated.",
    "ImplicitManifestShouldAppendText": false,
    "ReplaceResetsMerges_Description": "If enabled, once a manifest entry gets replaced, all previously queued merges will not apply.",
    "ReplaceResetsMerges": true,
    "NormalizeCsvIfAppending_Description": "Normalize CSV files when merging/appending. Filters out empty lines and adds newlines where appropiate. Duplicate title detection and removal from appending files.",
    "NormalizeCsvIfAppending": true,
    "DataManagerUnfreezeDelta_Description": "How often to refresh the UI during loading. Does this by skipping loads every specified amount of seconds.",
    "DataManagerUnfreezeDelta": 2.0,
    "DataManagerEverSpinnyDetectionTimespan_Description": "How long data is not being further processed until it is assumed to be stuck for good. Upon detection it dumps lots of data into the log, but nothing more.",
    "DataManagerEverSpinnyDetectionTimespan": 30.0,
    "DelayPrewarmToMainMenu_Description": "Delays executing prewarm requests until entering the main menu and dlc packs are loaded. Prevents choppy intro video and makes sure to include dlc items during prewarm.",
    "DelayPrewarmToMainMenu": true,
    "ShowDataManagerStatsInLoadingCurtain_Description": "Adds DataManager stats when showing a loading curtain.",
    "ShowDataManagerStatsInLoadingCurtain": true,
    "ProfilerEnabled_Description": "Enables a very simple profiler.",
    "ProfilerEnabled": false,
    "BlockedMods_Description": "Mods that should not be allowed to load. Useful in cases where those mods would (newly) interfere with ModTek.",
    "BlockedMods": [
        "FYLS"
    ],
    "IgnoreMissingMods_Description": "Ignore the dependency requirement of mods that depend on the listed mods. Useful if e.g. ModTek provides the same functionality as the ignored mods.",
    "IgnoreMissingMods": [
        "FYLS"
    ],
    "MinimalLastConfig_Description": "Hides all null and _Description fields from the generated `last` config file.",
    "MinimalLastConfig": true,
    "Logging": {
        "DebugLogDumpServerListen_Description": "HTTP server to force logs dump",
        "DebugLogDumpServerListen": "",
        "LogUncaughtExceptions_Description": "Logs uncaught exceptions via AppDomain handler.",
        "LogUncaughtExceptions": true,
        "LogExceptionInitializations_Description": "Logs out any exceptions being initialized, even before they are thrown or ignored.",
        "LogExceptionInitializations": false,
        "LogSqlQueryInitializations_Description": "Logs out any sql queries being initialized, even before they are executed or ignored.",
        "LogSqlQueryInitializations": false,
        "LogSqlQueryExecutionsFromDapper_Description": "Logs out any sql queries being executed via Dapper, logs actual parameters.",
        "LogSqlQueryExecutionsFromDapper": false,
        "LogThreadStarts_Description": "Logs who starts threads.",
        "LogThreadStarts": true,
        "LogStackTraces_Description": "Logs environment stack traces for every log statement, produces large amount of text.",
        "LogStackTraces": false,
        "LogStackTracesOnExceptions_Description": "Logs environment stack traces in addition to exception stack traces.",
        "LogStackTracesOnExceptions": true,
        "DebugLogLevelSetters_Description": "Log who changed a log level changed.",
        "DebugLogLevelSetters": false,
        "UnityConsoleAppenderEnabled_Description": "Append HBS log statements to the unity console. Disabled by default as it reduces performance.",
        "UnityConsoleAppenderEnabled": false,
        "ModLogAppendersEnabled_Description": "Allows mods to configure log appenders, set to false to improve performance.",
        "ModLogAppendersEnabled": true,
        "UnityConsoleAppender_Description": "Settings for the unity console appender.",
        "UnityConsoleAppender": {
            "LogRotationCount_Description": "How many log file to backups between application starts.",
            "LogRotationCount": 1,
            "Include_Description": "If set, matching log statements by prefix are written to the log. Exclusion has precedence over inclusion.",
            "Include": null,
            "Exclude_Description": "If set, matching log statements by prefix are ignored. Exclusion has precedence over inclusion.",
            "Exclude": null,
            "AbsoluteTimeEnabled_Description": "Adds the clock time.",
            "AbsoluteTimeEnabled": false,
            "AbsoluteTimeUseUtc_Description": "Use UTC instead of local time.",
            "AbsoluteTimeUseUtc": true,
            "StartupTimeEnabled_Description": "Adds the time since startup.",
            "StartupTimeEnabled": false
        },
        "AsynchronousLoggingEnabled_Description": "Uses another thread to format and log messages off the main thread.",
        "AsynchronousLoggingEnabled": true,
        "LogFlushToDisk_Description": "Makes ILog.Flush() flush logs to disk. Blocks until completed.",
        "LogFlushToDisk": true,
        "MainLog_Description": "The main log.",
        "MainLog": {
            "LogRotationCount_Description": "How many log file to backups between application starts.",
            "LogRotationCount": 1,
            "Include_Description": "If set, matching log statements by prefix are written to the log. Exclusion has precedence over inclusion.",
            "Include": null,
            "Exclude_Description": "If set, matching log statements by prefix are ignored. Exclusion has precedence over inclusion.",
            "Exclude": null,
            "AbsoluteTimeEnabled_Description": "Adds the clock time.",
            "AbsoluteTimeEnabled": true,
            "AbsoluteTimeUseUtc_Description": "Use UTC instead of local time.",
            "AbsoluteTimeUseUtc": true,
            "StartupTimeEnabled_Description": "Adds the time since startup.",
            "StartupTimeEnabled": false
        },
        "MainLogFilePath": "battletech_log.txt",
        "Logs_Description": "Allows to define logs, the `key` specifies the log file path relative to `.modtek`.",
        "Logs": {
            "ModTek.log": {
                "LogRotationCount_Description": "How many log file to backups between application starts.",
                "LogRotationCount": 1,
                "Include_Description": "If set, matching log statements by prefix are written to the log. Exclusion has precedence over inclusion.",
                "Include": [
                    "ModTek"
                ],
                "Exclude_Description": "If set, matching log statements by prefix are ignored. Exclusion has precedence over inclusion.",
                "Exclude": null,
                "AbsoluteTimeEnabled_Description": "Adds the clock time.",
                "AbsoluteTimeEnabled": true,
                "AbsoluteTimeUseUtc_Description": "Use UTC instead of local time.",
                "AbsoluteTimeUseUtc": true,
                "StartupTimeEnabled_Description": "Adds the time since startup.",
                "StartupTimeEnabled": false
            }
        }
    }
}